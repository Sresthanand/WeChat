{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Avatar } from 'react-native-elements';\nimport { AntDesign } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { StatusBar } from 'expo-status-bar';\nimport { auth, db } from \"../firebase\";\nimport { addDoc, collection, onSnapshot, orderBy, query, serverTimestamp } from \"firebase/firestore\";\nimport { doc } from 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar ChatScreen = function ChatScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Chat\",\n      headerTitleAlign: 'left',\n      headerTitle: function headerTitle() {\n        var _messages$;\n\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Avatar, {\n            rounded: true,\n            source: {\n              uri: ((_messages$ = messages[0]) == null ? void 0 : _messages$.data.photoURL) || 'https://www.pngarts.com/files/3/Avatar-PNG-Download-Image.png'\n            }\n          }), _jsx(Text, {\n            style: {\n              color: 'white',\n              marginLeft: 10,\n              fontWeight: '700'\n            },\n            children: route.params.chatName\n          })]\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsxs(View, {\n          style: styles.rightContainer,\n          children: [_jsx(TouchableOpacity, {\n            children: _jsx(AntDesign, {\n              name: \"videocamera\",\n              size: 24,\n              color: \"white\"\n            })\n          }), _jsx(TouchableOpacity, {\n            children: _jsx(Ionicons, {\n              name: \"call\",\n              size: 24,\n              color: \"white\"\n            })\n          })]\n        });\n      }\n    });\n  }, [navigation, messages]);\n\n  var sendMessage = function sendMessage() {\n    var _route$params;\n\n    Keyboard.dismiss();\n    var docRef = doc(db, 'chats', (_route$params = route.params) == null ? void 0 : _route$params.id);\n    var colRef = collection(docRef, \"messages\");\n    addDoc(colRef, {\n      timestamps: serverTimestamp(),\n      message: input,\n      displayName: auth.currentUser.displayName,\n      email: auth.currentUser.email,\n      photoURL: auth.currentUser.photoURL\n    });\n    setInput(\"\");\n  };\n\n  useEffect(function () {\n    var _route$params2;\n\n    var docRef = doc(db, 'chats', (_route$params2 = route.params) == null ? void 0 : _route$params2.id);\n    var colRef = collection(docRef, \"messages\");\n    var q = query(colRef, orderBy(\"timestamps\", \"asc\"));\n    var unsubscribe = onSnapshot(q, {\n      next: function next(snapshot) {\n        setMessages(snapshot.docs.map(function (doc) {\n          return {\n            id: doc.id,\n            data: doc.data()\n          };\n        }));\n      },\n      error: function error(err) {}\n    });\n    return unsubscribe;\n  }, [route]);\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(KeyboardAvoidingView, {\n      style: styles.keyboardContainer,\n      keyboardVerticalOffset: 90,\n      children: _jsx(TouchableWithoutFeedback, {\n        onPress: Keyboard.dismiss,\n        children: _jsxs(_Fragment, {\n          children: [_jsx(ScrollView, {\n            style: {\n              paddingTop: 15\n            },\n            children: messages.map(function (_ref2) {\n              var id = _ref2.id,\n                  data = _ref2.data;\n              return data.email === auth.currentUser.email ? _jsxs(View, {\n                style: styles.rec,\n                children: [_jsx(Avatar, {\n                  position: \"absolute\",\n                  rounded: true,\n                  bottom: -15,\n                  right: -5,\n                  size: 30,\n                  source: {\n                    uri: data.photoURL\n                  }\n                }), _jsx(Text, {\n                  style: styles.recieverText,\n                  children: data.message\n                })]\n              }, id) : _jsxs(View, {\n                style: styles.sendr,\n                children: [_jsx(Avatar, {\n                  position: \"absolute\",\n                  rounded: true,\n                  bottom: -15,\n                  right: -5,\n                  size: 30,\n                  source: {\n                    uri: data.photoURL\n                  }\n                }), _jsx(Text, {\n                  style: styles.senderText,\n                  children: data.message\n                }), _jsx(Text, {\n                  style: styles.senderName,\n                  children: data.displayName\n                })]\n              }, id);\n            })\n          }), _jsxs(View, {\n            style: styles.footer,\n            children: [_jsx(TextInput, {\n              value: input,\n              placeholder: \"Signal Message\",\n              style: styles.textInput,\n              onSubmitEditing: sendMessage,\n              onChangeText: function onChangeText(text) {\n                return setInput(text);\n              }\n            }), _jsx(TouchableOpacity, {\n              activeOpacity: 0.5,\n              onPress: sendMessage,\n              children: _jsxs(View, {\n                style: styles.camera,\n                children: [_jsx(AntDesign, {\n                  style: {\n                    marginHorizontal: 1\n                  },\n                  name: \"camera\",\n                  size: 24,\n                  color: \"#2B68E6\"\n                }), _jsx(Ionicons, {\n                  name: \"send\",\n                  size: 24,\n                  color: \"#2B68E6\"\n                })]\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n};\n\nexport default ChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  rightContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: 80,\n    marginRight: 20\n  },\n  keyboardContainer: {\n    flex: 1\n  },\n  footer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n    padding: 15\n  },\n  textInput: {\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    marginRight: 15,\n    backgroundColor: '#ECECEC',\n    padding: 10,\n    color: 'grey',\n    borderRadius: 30\n  },\n  rec: {\n    padding: 15,\n    backgroundColor: \"#ECECEC\",\n    alignSelf: 'flex-end',\n    borderRadius: 20,\n    marginRight: 15,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\"\n  },\n  sendr: {\n    padding: 15,\n    backgroundColor: \"#2868E6\",\n    alignSelf: 'flex-start',\n    borderRadius: 20,\n    margin: 15,\n    maxWidth: \"%80\",\n    position: \"relative\"\n  },\n  senderName: {\n    left: 10,\n    paddingRight: 10,\n    fontSize: 10,\n    color: 'white'\n  },\n  senderText: {\n    color: 'white',\n    fontWeight: '500',\n    marginLeft: 10,\n    marginBottom: 15\n  },\n  recieverText: {\n    color: 'black',\n    fontWeight: '800',\n    marginLeft: 10\n  },\n  camera: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["F:/native courses codes/WeChat/screens/ChatScreen.js"],"names":["React","useEffect","useLayoutEffect","useState","Avatar","AntDesign","Ionicons","StatusBar","auth","db","addDoc","collection","onSnapshot","orderBy","query","serverTimestamp","doc","ChatScreen","navigation","route","input","setInput","messages","setMessages","setOptions","title","headerTitleAlign","headerTitle","styles","container","uri","data","photoURL","color","marginLeft","fontWeight","params","chatName","headerRight","rightContainer","sendMessage","Keyboard","dismiss","docRef","id","colRef","timestamps","message","displayName","currentUser","email","q","unsubscribe","next","snapshot","docs","map","error","err","flex","backgroundColor","keyboardContainer","paddingTop","rec","recieverText","sendr","senderText","senderName","footer","textInput","text","camera","marginHorizontal","StyleSheet","create","flexDirection","alignItems","justifyContent","width","marginRight","padding","bottom","height","borderRadius","alignSelf","marginBottom","maxWidth","position","margin","left","paddingRight","fontSize"],"mappings":"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","sourcesContent":["import React, {useEffect, useLayoutEffect, useState} from 'react'\r\nimport { StyleSheet, Text, TouchableOpacity, View, SafeAreaView, KeyboardAvoidingView, ScrollView, TextInput, Keyboard, TouchableWithoutFeedback } from 'react-native'\r\nimport { Avatar } from 'react-native-elements';\r\nimport {AntDesign} from '@expo/vector-icons';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { auth, db } from '../firebase';\r\nimport { addDoc, collection, onSnapshot, orderBy, query, serverTimestamp} from \"firebase/firestore\";\r\nimport { doc } from 'firebase/firestore';\r\n\r\nconst ChatScreen = ({navigation, route}) => {\r\n    const[input, setInput] = useState(\"\");\r\n    const[messages, setMessages] = useState([]);\r\n\r\n    useLayoutEffect(()=>{\r\n        navigation.setOptions({\r\n            title: \"Chat\",\r\n            headerTitleAlign: 'left',\r\n            headerTitle: () => (\r\n                <View style = {styles.container}>\r\n                    <Avatar rounded\r\n                    source = {{uri: messages[0]?.data.photoURL || 'https://www.pngarts.com/files/3/Avatar-PNG-Download-Image.png'}}\r\n                    />\r\n                    <Text style = {{color: 'white', marginLeft: 10, fontWeight:'700'}}>{route.params.chatName}</Text>\r\n                </View>\r\n            ),\r\n            headerRight: () => (\r\n                <View style = {styles.rightContainer}>\r\n                    <TouchableOpacity>\r\n                        <AntDesign name = 'videocamera' size = {24} color = 'white'/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity>\r\n                        <Ionicons name = 'call' size = {24} color = 'white' />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )\r\n        })\r\n    }, [navigation, messages])\r\n    \r\n    const sendMessage = () => {\r\n\r\n        Keyboard.dismiss();\r\n        const docRef = doc(db, 'chats', route.params?.id);\r\n        const colRef = collection(docRef, \"messages\");\r\n        addDoc(colRef, {\r\n            timestamps: serverTimestamp(),\r\n            message: input,\r\n            displayName: auth.currentUser.displayName,\r\n            email:auth.currentUser.email,\r\n            photoURL:auth.currentUser.photoURL\r\n        });\r\n        setInput(\"\");\r\n    };\r\n        useEffect(() => {\r\n            const docRef = doc(db, 'chats', route.params?.id);\r\n            const colRef = collection(docRef, \"messages\");\r\n            const q = query(colRef, orderBy(\"timestamps\", \"asc\"));\r\n            const unsubscribe = onSnapshot(q, {\r\n                next: (snapshot) => {\r\n                    setMessages(snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data()\r\n                    })));\r\n                },\r\n                error: (err)=>{}\r\n            });\r\n            return unsubscribe;\r\n        }, [route])\r\n\r\n    return (\r\n        <SafeAreaView style = {{flex: 1, backgroundColor: 'white'}}>\r\n            <StatusBar style = 'light'/>\r\n            <KeyboardAvoidingView style = {styles.keyboardContainer} keyboardVerticalOffset={90}>\r\n                <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n                <>\r\n                <ScrollView style = {{paddingTop: 15}}>\r\n                    {messages.map(({id, data}) => (\r\n                        data.email === auth.currentUser.email ? (\r\n                            <View key = {id} style = {styles.rec}>\r\n                                <Avatar \r\n                                    position = 'absolute'\r\n                                    rounded\r\n                                    bottom= {-15}\r\n                                    right = {-5}\r\n                                    size = {30}\r\n                                    source = {{uri : data.photoURL}}\r\n                                />\r\n                                <Text style = {styles.recieverText}>{data.message}</Text>\r\n                            </View>\r\n                        ): (\r\n                            <View key = {id}  style = {styles.sendr}>\r\n                                <Avatar \r\n                                    position = 'absolute'\r\n                                    rounded\r\n                                    bottom= {-15}\r\n                                    right = {-5}\r\n                                    size = {30}\r\n                                    source = {{uri : data.photoURL}}\r\n                                />\r\n                                <Text style = {styles.senderText}>{data.message}</Text>\r\n                                <Text style = {styles.senderName}>{data.displayName}</Text>\r\n                            </View>\r\n                        )\r\n                    ))}\r\n                </ScrollView>\r\n                <View style = {styles.footer}>\r\n                    <TextInput\r\n                    value = {input} \r\n                    placeholder='Signal Message' \r\n                    style = {styles.textInput}\r\n                    onSubmitEditing={sendMessage}\r\n                    onChangeText={(text) => setInput(text)}\r\n                    />\r\n                    <TouchableOpacity \r\n                        activeOpacity={0.5} \r\n                        onPress={sendMessage}>\r\n                            <View style = {styles.camera}>\r\n                            <AntDesign style = {{marginHorizontal: 1}}name=\"camera\" size={24} color=\"#2B68E6\" />\r\n                            <Ionicons name = 'send' size={24} color='#2B68E6'/>\r\n                            </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                </>\r\n                </TouchableWithoutFeedback>\r\n            </KeyboardAvoidingView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default ChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    },\r\n    rightContainer:{\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        width: 80,\r\n        marginRight: 20,\r\n    },\r\n    keyboardContainer:{\r\n        flex: 1,\r\n    },\r\n    footer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        padding: 15,\r\n    },\r\n    textInput:{\r\n        bottom: 0,\r\n        height: 40,\r\n        flex: 1,\r\n        marginRight: 15,\r\n        backgroundColor: '#ECECEC',\r\n        padding: 10,\r\n        color: 'grey',\r\n        borderRadius: 30,\r\n    },\r\n    rec: {\r\n        padding: 15,\r\n        backgroundColor: \"#ECECEC\",\r\n        alignSelf: 'flex-end',\r\n        borderRadius: 20,\r\n        marginRight: 15,\r\n        marginBottom: 20,\r\n        maxWidth: \"80%\",\r\n        position: \"relative\"\r\n    },\r\n    sendr:{\r\n        padding: 15,\r\n        backgroundColor: \"#2868E6\",\r\n        alignSelf: 'flex-start',\r\n        borderRadius: 20,\r\n        margin: 15,\r\n        maxWidth: \"%80\",\r\n        position: \"relative\"\r\n    },\r\n    senderName: {\r\n        left: 10,\r\n        paddingRight: 10,\r\n        fontSize: 10,\r\n        color: 'white',\r\n    },\r\n    senderText: {\r\n        color: 'white',\r\n        fontWeight: '500',\r\n        marginLeft: 10,\r\n        marginBottom: 15,\r\n    },\r\n    recieverText: {\r\n        color: 'black',\r\n        fontWeight: '800',\r\n        marginLeft: 10,\r\n    },\r\n    camera: {\r\n        flexDirection: 'row',\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}