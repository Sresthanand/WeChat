{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useLayoutEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { db } from \"../firebase\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddChatScreen = function AddChatScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: 'Add a New Chat'\n    });\n  }, [navigation]);\n\n  var createChat = function createChat() {\n    return _regeneratorRuntime.async(function createChat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(addDoc(collection(db, 'chats'), {\n              chatName: input\n            }).then(function () {\n              navigation.goBack();\n            }).catch(function (error) {\n              return alert(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.insideImg,\n      children: [_jsx(AntDesign, {\n        name: \"wechat\",\n        size: 24,\n        color: \"black\"\n      }), _jsx(TextInput, {\n        placeholder: \"Enter a chat name\",\n        value: input,\n        onChangeText: function onChangeText(text) {\n          return setInput(text);\n        }\n      })]\n    }), _jsx(Button, {\n      disabled: !input,\n      onPress: createChat,\n      title: \"Create new Chat\"\n    })]\n  });\n};\n\nexport default AddChatScreen;\nvar styles = StyleSheet.create({\n  insideImg: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["F:/native courses codes/WeChat/screens/AddChatScreen.js"],"names":["React","useLayoutEffect","useState","AntDesign","db","addDoc","collection","AddChatScreen","navigation","input","setInput","setOptions","title","createChat","chatName","then","goBack","catch","error","alert","styles","container","insideImg","text","StyleSheet","create","flexDirection"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,eAAf,EAAgCC,QAAhC,QAA+C,OAA/C;;;;;;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,EAAT;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAkC,oBAAlC;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAEpC,kBAAyBN,QAAQ,CAAC,EAAD,CAAjC;AAAA;AAAA,MAAMO,KAAN;AAAA,MAAaC,QAAb;;AACAT,EAAAA,eAAe,CAAC,YAAM;AAClBO,IAAAA,UAAU,CAACG,UAAX,CAAsB;AACpBC,MAAAA,KAAK,EAAE;AADa,KAAtB;AAGD,GAJY,EAIV,CAACJ,UAAD,CAJU,CAAf;;AAME,MAAMK,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACXR,MAAM,CACTC,UAAU,CAACF,EAAD,EAAI,OAAJ,CADD,EACe;AACpBU,cAAAA,QAAQ,EAAEL;AADU,aADf,CAAN,CAKLM,IALK,CAKA,YAAM;AACRP,cAAAA,UAAU,CAACQ,MAAX;AACH,aAPK,EAQLC,KARK,CAQC,UAACC,KAAD;AAAA,qBAAWC,KAAK,CAACD,KAAD,CAAhB;AAAA,aARD,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAWF,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAIE,MAAM,CAACC,SAAtB;AAAA,eACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAID,MAAM,CAACE,SAAtB;AAAA,iBACA,KAAC,SAAD;AAAW,QAAA,IAAI,EAAC,QAAhB;AAAyB,QAAA,IAAI,EAAE,EAA/B;AAAmC,QAAA,KAAK,EAAC;AAAzC,QADA,EAEA,KAAC,SAAD;AACI,QAAA,WAAW,EAAC,mBADhB;AAEI,QAAA,KAAK,EAAIb,KAFb;AAGI,QAAA,YAAY,EAAE,sBAACc,IAAD;AAAA,iBAAUb,QAAQ,CAACa,IAAD,CAAlB;AAAA;AAHlB,QAFA;AAAA,MADJ,EASI,KAAC,MAAD;AAAQ,MAAA,QAAQ,EAAI,CAACd,KAArB;AAA4B,MAAA,OAAO,EAAII,UAAvC;AAAmD,MAAA,KAAK,EAAG;AAA3D,MATJ;AAAA,IADJ;AAaH,CAjCD;;AAmCA,eAAeN,aAAf;AAEA,IAAMa,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,aAAa,EAAE;AADR;AADkB,CAAlB,CAAf","sourcesContent":["import React, {useLayoutEffect, useState} from 'react'\r\nimport { StyleSheet, Text, View, TextInput, Button } from 'react-native'\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { db } from '../firebase';\r\nimport { addDoc, collection} from \"firebase/firestore\";\r\n\r\nconst AddChatScreen = ({navigation}) => {\r\n\r\n    const[input, setInput] = useState(\"\");\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n          title: 'Add a New Chat',\r\n        });\r\n      }, [navigation]);\r\n      \r\n      const createChat = async () => {\r\n        await addDoc(\r\n           collection(db,'chats'), {\r\n               chatName: input,\r\n           } \r\n        )\r\n        .then(() => {\r\n            navigation.goBack();\r\n        })\r\n        .catch((error) => alert(error));\r\n    }\r\n    return (\r\n        <View style = {styles.container}>\r\n            <View style = {styles.insideImg}>\r\n            <AntDesign name=\"wechat\" size={24} color=\"black\" />\r\n            <TextInput \r\n                placeholder='Enter a chat name'\r\n                value = {input}\r\n                onChangeText={(text) => setInput(text)}\r\n            />\r\n            </View>\r\n            <Button disabled = {!input} onPress = {createChat} title = 'Create new Chat'/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AddChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    insideImg: {\r\n        flexDirection: 'row',\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}