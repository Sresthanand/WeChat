{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { StatusBar } from 'expo-status-bar';\nimport { onAuthStateChanged, signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  useEffect(function () {\n    var unsubscribe = onAuthStateChanged(auth, function (authUser) {\n      if (authUser) {\n        navigation.replace('home');\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var signIn = function signIn() {\n    signInWithEmailAndPassword(auth, email, password).then(function () {\n      onAuthStateChanged(auth, function (authUser) {\n        if (authUser) {\n          navigation.replace('home');\n        }\n      });\n    }).catch(function (error) {\n      return alert(error);\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(Image, {\n      source: {\n        uri: 'https://blog.mozilla.org/internetcitizen/files/2018/08/signal-logo.png'\n      },\n      style: styles.img\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        autoFocus: true,\n        type: \"email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        type: \"password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })]\n    }), _jsx(View, {\n      style: styles.change1,\n      children: _jsx(Button, {\n        title: \"Login\",\n        onPress: signIn\n      })\n    }), _jsx(View, {\n      style: styles.change2,\n      children: _jsx(Button, {\n        title: \"Register\",\n        onPress: function onPress() {\n          return navigation.navigate('Register');\n        }\n      })\n    }), _jsx(View, {\n      style: {\n        height: 100\n      }\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  inputContainer: {\n    width: 300\n  },\n  img: {\n    width: 200,\n    height: 200\n  },\n  change1: {\n    width: 200,\n    marginTop: 10\n  },\n  change2: {\n    width: 200,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["F:/native courses codes/WeChat/screens/LoginScreen.js"],"names":["React","useState","useEffect","StatusBar","onAuthStateChanged","signInWithEmailAndPassword","auth","LoginScreen","navigation","email","setEmail","password","setPassword","unsubscribe","authUser","replace","signIn","then","catch","error","alert","styles","container","uri","img","inputContainer","text","change1","change2","navigate","height","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","width","marginTop"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { StyleSheet, Text, View, Image, TextInput, Button } from 'react-native'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport { onAuthStateChanged, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../firebase'\r\n\r\nconst LoginScreen = ({navigation}) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    useEffect(()=>{\r\n        const unsubscribe = onAuthStateChanged(auth, authUser => {\r\n            if(authUser){\r\n                navigation.replace('home');\r\n            }\r\n          });\r\n          return unsubscribe;\r\n    },[])\r\n    const signIn = () => {\r\n         signInWithEmailAndPassword(auth, email,password)\r\n         .then(() => {\r\n            onAuthStateChanged(auth, authUser=> {\r\n                if(authUser){\r\n                    navigation.replace('home');\r\n                }\r\n             });\r\n         })\r\n         .catch((error) => alert(error));\r\n    }\r\n    return (\r\n        <View style = {styles.container}>\r\n            <StatusBar style = 'light'/>\r\n            <Image source = {{\r\n                uri: \r\n                'https://blog.mozilla.org/internetcitizen/files/2018/08/signal-logo.png',\r\n                }} style = {styles.img}\r\n            />\r\n            <View style= {styles.inputContainer}>\r\n                <TextInput placeholder='Email' \r\n                autoFocus \r\n                type = 'email' \r\n                value = {email} \r\n                onChangeText={(text) => setEmail(text)}/>\r\n\r\n                <TextInput \r\n                placeholder='Password' \r\n                secureTextEntry \r\n                type = 'password'\r\n                value = {password}\r\n                onChangeText={(text) => setPassword(text)}\r\n                />\r\n            </View>\r\n\r\n            <View style = {styles.change1}>\r\n            <Button title = 'Login' onPress={signIn}/>\r\n            </View>\r\n            <View style= {styles.change2}>\r\n            <Button title = 'Register' onPress={()=> navigation.navigate('Register')}/>\r\n            </View>\r\n            <View style = {{height: 100}}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 10,\r\n        backgroundColor: 'white',\r\n    },\r\n    inputContainer: {\r\n        width: 300,\r\n    },\r\n    img: {\r\n        width: 200,\r\n        height: 200,\r\n    },\r\n    change1: {\r\n        width: 200,\r\n        marginTop: 10,\r\n    },\r\n    change2: {\r\n        width: 200,\r\n        marginTop: 10,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}