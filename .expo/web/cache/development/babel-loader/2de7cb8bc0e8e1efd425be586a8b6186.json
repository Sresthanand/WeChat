{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { StatusBar } from 'expo-status-bar';\nimport { auth } from \"../firebase\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RegisterScreen = function RegisterScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageUrl = _useState8[0],\n      setImageUrl = _useState8[1];\n\n  var register = function register() {\n    createUserWithEmailAndPassword(auth, email, password).then(function () {\n      updateProfile(auth.currentUser, {\n        displayName: name,\n        photoURL: imageUrl || 'https://randomuser.me/api/portraits/men/36.jpg'\n      });\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(Text, {\n      style: styles.textheader,\n      children: \"Create a Signal account\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Full Name\",\n        autoFocus: true,\n        type: \"text\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Email\",\n        type: \"email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        type: \"password\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Profile Picture URL (optional)\",\n        type: \"text\",\n        value: imageUrl,\n        onChangeText: function onChangeText(text) {\n          return setImageUrl(text);\n        }\n      })]\n    }), _jsx(View, {\n      style: styles.button,\n      children: _jsx(Button, {\n        title: \"Register\",\n        onPress: register\n      })\n    }), _jsx(View, {\n      style: {\n        height: 100\n      }\n    })]\n  });\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  inputContainer: {\n    width: 300\n  },\n  textheader: {\n    marginBottom: 50,\n    fontSize: 26,\n    fontWeight: 'bold'\n  },\n  button: {\n    width: 200,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["F:/native courses codes/WeChat/screens/RegisterScreen.js"],"names":["React","useState","StatusBar","auth","createUserWithEmailAndPassword","updateProfile","RegisterScreen","name","setName","email","setEmail","password","setPassword","imageUrl","setImageUrl","register","then","currentUser","displayName","photoURL","catch","error","alert","message","styles","container","textheader","inputContainer","text","button","height","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","width","marginBottom","fontSize","fontWeight","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,IAAT;AACA,SAASC,8BAAT,EAAyCC,aAAzC,QAA8D,eAA9D;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,kBAAwBL,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BP,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCT,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCX,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBX,IAAAA,8BAA8B,CAACD,IAAD,EAAOM,KAAP,EAAcE,QAAd,CAA9B,CACCK,IADD,CACM,YAAM;AACRX,MAAAA,aAAa,CAACF,IAAI,CAACc,WAAN,EAAmB;AAC5BC,QAAAA,WAAW,EAAEX,IADe;AAE5BY,QAAAA,QAAQ,EACRN,QAAQ,IACR;AAJ4B,OAAnB,CAAb;AAMH,KARD,EASCO,KATD,CASO,UAACC,KAAD,EAAW;AAClBC,MAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,KAXG;AAYH,GAbD;;AAcA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC,SAAtB;AAAA,eACI,KAAC,SAAD;AAAW,MAAA,KAAK,EAAG;AAAnB,MADJ,EAEI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAID,MAAM,CAACE,UAAtB;AAAA;AAAA,MAFJ,EAGI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAIF,MAAM,CAACG,cAAtB;AAAA,iBACI,KAAC,SAAD;AACA,QAAA,WAAW,EAAC,WADZ;AAEA,QAAA,SAAS,MAFT;AAGA,QAAA,IAAI,EAAG,MAHP;AAIA,QAAA,KAAK,EAAIpB,IAJT;AAKA,QAAA,YAAY,EAAE,sBAACqB,IAAD;AAAA,iBAAUpB,OAAO,CAACoB,IAAD,CAAjB;AAAA;AALd,QADJ,EAQI,KAAC,SAAD;AACA,QAAA,WAAW,EAAC,OADZ;AAEA,QAAA,IAAI,EAAG,OAFP;AAGA,QAAA,KAAK,EAAInB,KAHT;AAIA,QAAA,YAAY,EAAE,sBAACmB,IAAD;AAAA,iBAAUlB,QAAQ,CAACkB,IAAD,CAAlB;AAAA;AAJd,QARJ,EAcI,KAAC,SAAD;AACA,QAAA,WAAW,EAAC,UADZ;AAEA,QAAA,IAAI,EAAG,UAFP;AAGA,QAAA,eAAe,MAHf;AAIA,QAAA,KAAK,EAAIjB,QAJT;AAKA,QAAA,YAAY,EAAE,sBAACiB,IAAD;AAAA,iBAAUhB,WAAW,CAACgB,IAAD,CAArB;AAAA;AALd,QAdJ,EAqBI,KAAC,SAAD;AACA,QAAA,WAAW,EAAC,gCADZ;AAEA,QAAA,IAAI,EAAG,MAFP;AAGA,QAAA,KAAK,EAAIf,QAHT;AAIA,QAAA,YAAY,EAAE,sBAACe,IAAD;AAAA,iBAAUd,WAAW,CAACc,IAAD,CAArB;AAAA;AAJd,QArBJ;AAAA,MAHJ,EA+BI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAIJ,MAAM,CAACK,MAAtB;AAAA,gBACA,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAG,UAAhB;AAA2B,QAAA,OAAO,EAAEd;AAApC;AADA,MA/BJ,EAkCI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAI;AAACe,QAAAA,MAAM,EAAE;AAAT;AAAf,MAlCJ;AAAA,IADJ;AAsCH,CA1DD;;AA4DA,eAAexB,cAAf;AAEA,IAAMkB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,OAAO,EAAE,EAJF;AAKPC,IAAAA,eAAe,EAAE;AALV,GADkB;AAQ7BV,EAAAA,cAAc,EAAE;AACZW,IAAAA,KAAK,EAAE;AADK,GARa;AAW7BZ,EAAAA,UAAU,EAAE;AACRa,IAAAA,YAAY,EAAE,EADN;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GAXiB;AAgB7BZ,EAAAA,MAAM,EAAE;AACJS,IAAAA,KAAK,EAAE,GADH;AAEJI,IAAAA,SAAS,EAAE;AAFP;AAhBqB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport { StyleSheet, Text, View, TextInput, Button } from 'react-native'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport { auth } from '../firebase'\r\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\r\n\r\nconst RegisterScreen = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    \r\n    const register = () => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n        .then(() => {\r\n            updateProfile(auth.currentUser, {\r\n                displayName: name,\r\n                photoURL:\r\n                imageUrl || \r\n                'https://randomuser.me/api/portraits/men/36.jpg',\r\n            });\r\n        })\r\n        .catch((error) => {\r\n        alert(error.message);\r\n    });\r\n    }\r\n    return (\r\n        <View style = {styles.container}>\r\n            <StatusBar style = 'light'/>\r\n            <Text style = {styles.textheader}>Create a Signal account</Text>\r\n            <View style = {styles.inputContainer}>\r\n                <TextInput \r\n                placeholder='Full Name'\r\n                autoFocus\r\n                type = 'text'\r\n                value = {name}\r\n                onChangeText={(text) => setName(text)}\r\n                />\r\n                <TextInput \r\n                placeholder='Email'\r\n                type = 'email'\r\n                value = {email}\r\n                onChangeText={(text) => setEmail(text)}\r\n                />\r\n                <TextInput \r\n                placeholder='Password'\r\n                type = 'password'\r\n                secureTextEntry\r\n                value = {password}\r\n                onChangeText={(text) => setPassword(text)}\r\n                />\r\n                <TextInput \r\n                placeholder='Profile Picture URL (optional)'\r\n                type = 'text'\r\n                value = {imageUrl}\r\n                onChangeText={(text) => setImageUrl(text)}\r\n                />\r\n            </View>\r\n            <View style = {styles.button}>\r\n            <Button title = \"Register\" onPress={register}/>\r\n            </View>\r\n            <View style = {{height: 100}}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 10,\r\n        backgroundColor: 'white',\r\n    },\r\n    inputContainer: {\r\n        width: 300,\r\n    },\r\n    textheader: {\r\n        marginBottom: 50,\r\n        fontSize: 26,\r\n        fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        width: 200,\r\n        marginTop: 20,\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}