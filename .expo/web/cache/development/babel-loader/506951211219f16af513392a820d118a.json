{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { db } from \"../firebase\";\nimport { addDoc, collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport { doc } from 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomListItem = function CustomListItem(props) {\n  var _chatMessages$, _chatMessages$2, _chatMessages$3;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatMessages = _useState2[0],\n      setChatMessages = _useState2[1];\n\n  useEffect(function () {\n    var docRef = doc(db, 'chats', props.id);\n    var colRef = collection(docRef, \"messages\");\n    var q = query(colRef, orderBy(\"timestamps\", \"desc\"));\n    var unsubscribe = onSnapshot(q, {\n      next: function next(snapshot) {\n        setChatMessages(snapshot.docs.map(function (doc) {\n          return {\n            data: doc.data()\n          };\n        }));\n      },\n      error: function error(err) {\n        alert(err);\n      }\n    });\n    return unsubscribe;\n  });\n  return _jsxs(ListItem, {\n    bottomDivider: true,\n    onPress: function onPress() {\n      return props.enterChat(props.id, props.chatName);\n    },\n    children: [_jsx(Avatar, {\n      rounded: true,\n      source: {\n        uri: (chatMessages == null ? void 0 : (_chatMessages$ = chatMessages[0]) == null ? void 0 : _chatMessages$.photoURL) || 'https://randomuser.me/api/portraits/men/36.jpg'\n      }\n    }), _jsxs(ListItem.Content, {\n      children: [_jsx(ListItem.Title, {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: props.chatName\n      }), _jsxs(ListItem.Subtitle, {\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        children: [chatMessages == null ? void 0 : (_chatMessages$2 = chatMessages[0]) == null ? void 0 : _chatMessages$2.displayName, \" : \", chatMessages == null ? void 0 : (_chatMessages$3 = chatMessages[0]) == null ? void 0 : _chatMessages$3.message]\n      })]\n    })]\n  }, props.id);\n};\n\nexport default CustomListItem;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["F:/native courses codes/WeChat/components/CustomListItem.js"],"names":["React","useState","useEffect","ListItem","Avatar","db","addDoc","collection","onSnapshot","orderBy","query","doc","CustomListItem","props","chatMessages","setChatMessages","docRef","id","colRef","q","unsubscribe","next","snapshot","docs","map","data","error","err","alert","enterChat","chatName","uri","photoURL","fontWeight","displayName","message","styles","StyleSheet","create"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AAEA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,uBAAjC;AACA,SAASC,EAAT;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,UAA7B,EAAyCC,OAAzC,EAAkDC,KAAlD,QAA8D,oBAA9D;AACA,SAASC,GAAT,QAAoB,oBAApB;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA;;AAC9B,kBAAwCZ,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOa,YAAP;AAAA,MAAqBC,eAArB;;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMc,MAAM,GAAGL,GAAG,CAACN,EAAD,EAAK,OAAL,EAAcQ,KAAK,CAACI,EAApB,CAAlB;AACA,QAAMC,MAAM,GAAGX,UAAU,CAACS,MAAD,EAAS,UAAT,CAAzB;AACA,QAAMG,CAAC,GAAGT,KAAK,CAACQ,MAAD,EAAST,OAAO,CAAC,YAAD,EAAe,MAAf,CAAhB,CAAf;AACA,QAAMW,WAAW,GAAGZ,UAAU,CAACW,CAAD,EAAI;AAC9BE,MAAAA,IAAI,EAAE,cAACC,QAAD,EAAc;AAChBP,QAAAA,eAAe,CAACO,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAAAb,GAAG;AAAA,iBAAK;AACtCc,YAAAA,IAAI,EAAEd,GAAG,CAACc,IAAJ;AADgC,WAAL;AAAA,SAArB,CAAD,CAAf;AAGH,OAL6B;AAM9BC,MAAAA,KAAK,EAAE,eAACC,GAAD,EAAO;AAACC,QAAAA,KAAK,CAACD,GAAD,CAAL;AAAW;AANI,KAAJ,CAA9B;AAQA,WAAOP,WAAP;AACH,GAbQ,CAAT;AAcA,SACI,MAAC,QAAD;AAA2B,IAAA,aAAa,MAAxC;AAAyC,IAAA,OAAO,EAAE;AAAA,aAAKP,KAAK,CAACgB,SAAN,CAAgBhB,KAAK,CAACI,EAAtB,EAA0BJ,KAAK,CAACiB,QAAhC,CAAL;AAAA,KAAlD;AAAA,eACI,KAAC,MAAD;AACI,MAAA,OAAO,MADX;AAEI,MAAA,MAAM,EAAI;AACNC,QAAAA,GAAG,EAAE,CAAAjB,YAAY,QAAZ,8BAAAA,YAAY,CAAG,CAAH,CAAZ,oCAAmBkB,QAAnB,KACL;AAFM;AAFd,MADJ,EAQI,MAAC,QAAD,CAAU,OAAV;AAAA,iBACI,KAAC,QAAD,CAAU,KAAV;AAAgB,QAAA,KAAK,EAAI;AAACC,UAAAA,UAAU,EAAE;AAAb,SAAzB;AAAA,kBACKpB,KAAK,CAACiB;AADX,QADJ,EAII,MAAC,QAAD,CAAU,QAAV;AAAmB,QAAA,aAAa,EAAE,CAAlC;AAAqC,QAAA,aAAa,EAAC,MAAnD;AAAA,mBACKhB,YADL,uCACKA,YAAY,CAAG,CAAH,CADjB,qBACK,gBAAmBoB,WADxB,SACwCpB,YADxC,uCACwCA,YAAY,CAAG,CAAH,CADpD,qBACwC,gBAAmBqB,OAD3D;AAAA,QAJJ;AAAA,MARJ;AAAA,KAAiBtB,KAAK,CAACI,EAAvB,CADJ;AAmBH,CApCD;;AAsCA,eAAeL,cAAf;AAEA,IAAMwB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport { ListItem, Avatar } from 'react-native-elements';\r\nimport { db } from '../firebase';\r\nimport { addDoc, collection, onSnapshot, orderBy, query} from \"firebase/firestore\";\r\nimport { doc } from 'firebase/firestore';\r\n\r\nconst CustomListItem = (props) => {\r\n    const [chatMessages, setChatMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const docRef = doc(db, 'chats', props.id);\r\n        const colRef = collection(docRef, \"messages\");\r\n        const q = query(colRef, orderBy(\"timestamps\", \"desc\"));\r\n        const unsubscribe = onSnapshot(q, {\r\n            next: (snapshot) => {\r\n                setChatMessages(snapshot.docs.map(doc => ({\r\n                    data: doc.data()\r\n                })));\r\n            },\r\n            error: (err)=>{alert(err)}\r\n        });\r\n        return unsubscribe;\r\n    })\r\n    return (\r\n        <ListItem key = {props.id} bottomDivider onPress={()=> props.enterChat(props.id, props.chatName)}>\r\n            <Avatar \r\n                rounded\r\n                source = {{\r\n                    uri: chatMessages?.[0]?.photoURL ||\r\n                    'https://randomuser.me/api/portraits/men/36.jpg',\r\n                }}\r\n            />\r\n            <ListItem.Content>\r\n                <ListItem.Title style = {{fontWeight: 'bold'}}>\r\n                    {props.chatName}\r\n                </ListItem.Title>\r\n                <ListItem.Subtitle numberOfLines={1} ellipsizeMode='tail'>\r\n                    {chatMessages?.[0]?.displayName} : {chatMessages?.[0]?.message}\r\n                </ListItem.Subtitle>\r\n            </ListItem.Content>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default CustomListItem\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}