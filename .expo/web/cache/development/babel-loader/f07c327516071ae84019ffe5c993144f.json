{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar } from 'react-native-elements';\nimport CustomListItem from \"../components/CustomListItem\";\nimport { auth } from \"../firebase\";\nimport { AntDesign, SimpleLineIcons } from '@expo/vector-icons';\nimport { collection, onSnapshot } from 'firebase/firestore';\nimport { db } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chat = _useState2[0],\n      setChat = _useState2[1];\n\n  var signOutUser = function signOutUser() {\n    auth.signOut().then(function () {\n      navigation.replace('Login');\n    });\n  };\n\n  useEffect(function () {\n    var colRef = collection(db, 'chats');\n    var unsubscribe = onSnapshot(colRef, {\n      next: function next(snapshot) {\n        setChat(snapshot.docs.map(function (doc) {\n          return {\n            id: doc.id,\n            data: doc.data()\n          };\n        }));\n      },\n      error: function error(_error) {\n        alert(_error);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: 'Welcome to WeChat',\n      headerStyle: {\n        backgroundColor: '#fff'\n      },\n      headerTintColor: 'black',\n      headerTitleStyle: {\n        color: 'black',\n        marginLeft: 60\n      },\n      headerLeft: function headerLeft() {\n        var _auth$currentUser;\n\n        return _jsx(View, {\n          style: {\n            marginLeft: 20\n          },\n          children: _jsx(TouchableOpacity, {\n            onPress: signOutUser,\n            activeOpacity: 0.5,\n            children: _jsx(Avatar, {\n              rounded: true,\n              source: {\n                uri: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.photoURL\n              }\n            })\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsxs(View, {\n          style: styles.upContainer,\n          children: [_jsx(TouchableOpacity, {\n            activeOpacity: 0.5,\n            children: _jsx(AntDesign, {\n              name: \"camerao\",\n              size: 24,\n              color: \"black\"\n            })\n          }), _jsx(TouchableOpacity, {\n            activeOpacity: 0.5,\n            onPress: function onPress() {\n              navigation.navigate('AddChatScreen');\n            },\n            children: _jsx(SimpleLineIcons, {\n              name: \"pencil\",\n              size: 24,\n              color: \"black\"\n            })\n          })]\n        });\n      }\n    });\n  }, [navigation]);\n\n  var enterChat = function enterChat(id, chatName) {\n    navigation.navigate('Chat', {\n      id: id,\n      chatName: chatName\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    children: _jsx(ScrollView, {\n      style: styles.container,\n      children: chat.map(function (_ref2) {\n        var id = _ref2.id,\n            chatName = _ref2.data.chatName;\n        return _jsx(CustomListItem, {\n          id: id,\n          chatName: chatName,\n          enterChat: enterChat\n        }, id);\n      })\n    })\n  });\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%'\n  },\n  upContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: 80,\n    marginRight: 20\n  }\n});","map":{"version":3,"sources":["F:/native courses codes/WeChat/screens/HomeScreen.js"],"names":["React","useLayoutEffect","useState","useEffect","Avatar","CustomListItem","auth","AntDesign","SimpleLineIcons","collection","onSnapshot","db","HomeScreen","navigation","chat","setChat","signOutUser","signOut","then","replace","colRef","unsubscribe","next","snapshot","docs","map","doc","id","data","error","alert","setOptions","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","color","marginLeft","headerLeft","uri","currentUser","photoURL","headerRight","styles","upContainer","navigate","enterChat","chatName","container","StyleSheet","create","height","flexDirection","justifyContent","width","marginRight"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useState, useEffect} from 'react'\r\nimport { StyleSheet, Text, View, SafeAreaView, ScrollView, Button, TouchableOpacity } from 'react-native'\r\nimport { Avatar } from 'react-native-elements';\r\nimport CustomListItem from '../components/CustomListItem'\r\nimport { auth } from '../firebase';\r\nimport {AntDesign, SimpleLineIcons} from '@expo/vector-icons';\r\nimport { collection, onSnapshot } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\n\r\nconst HomeScreen = ({navigation}) => {\r\n    const[chat, setChat] = useState([]);\r\n    const signOutUser = () => {\r\n        auth.signOut().then(() => {\r\n            navigation.replace('Login')\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        const colRef = collection(db, 'chats');\r\n        const unsubscribe = onSnapshot(colRef, {\r\n            next: (snapshot) => {\r\n                setChat(snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })));\r\n            },\r\n            error: (error) => {\r\n                alert(error);\r\n            } \r\n        });\r\n        return unsubscribe;\r\n    },[])\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n          title: 'Welcome to WeChat',\r\n          headerStyle: {backgroundColor: '#fff'},\r\n          headerTintColor:'black',\r\n          headerTitleStyle: {color:'black', marginLeft:60},\r\n          headerLeft: () => (\r\n              <View style = {{marginLeft: 20}}>\r\n                  <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\r\n                  <Avatar rounded source = {{uri: auth?.currentUser?.photoURL}}/>\r\n                  </TouchableOpacity>\r\n              </View>\r\n          ),\r\n          headerRight: () => (\r\n              <View style = {styles.upContainer}>\r\n                  <TouchableOpacity activeOpacity={0.5}>\r\n                      <AntDesign name = 'camerao' size = {24} color ='black'/>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity activeOpacity={0.5} onPress={() => {\r\n                      navigation.navigate('AddChatScreen');\r\n                  }}>\r\n                      <SimpleLineIcons name = 'pencil' size = {24} color = 'black'/>\r\n                  </TouchableOpacity>\r\n              </View>\r\n          )\r\n        });\r\n      }, [navigation]);\r\n\r\n      const enterChat = (id, chatName) => {\r\n          navigation.navigate('Chat', {\r\n              id,\r\n              chatName,\r\n          });\r\n      };\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <ScrollView style = {styles.container}>\r\n                {chat.map(({id, data: {chatName}}) => (\r\n                    <CustomListItem key = {id} \r\n                        id = {id} \r\n                        chatName = {chatName}\r\n                        enterChat = {enterChat}\r\n                        />\r\n                ))}\r\n                \r\n            </ScrollView>\r\n            </SafeAreaView>\r\n    )\r\n} \r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: '100%'\r\n    },\r\n    upContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        width: 80,\r\n        marginRight: 20\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}